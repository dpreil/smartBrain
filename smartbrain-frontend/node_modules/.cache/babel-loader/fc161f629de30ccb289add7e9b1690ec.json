{"ast":null,"code":"var _jsxFileName = \"/Users/davidpreil/Desktop/React/smartbrain/src/imageReader.js\";\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css'; // import Particles from 'react-particles-js';\n// import particleOptions from './particles';\n\nimport TiltBox from './tiltbox'; //import Tilt from 'react-vanilla-tilt';\n\nimport InputField from './inputField';\nimport ImageBox from './imagebox';\nimport Logout from './logout';\nimport Clarifai from 'clarifai';\n\nclass ImageReader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getImg = event => {\n      event.preventDefault();\n      this.setState({\n        imgURL: event.target.value,\n        box: ''\n      });\n      console.log(this.state.box);\n    };\n\n    this.submitImage = e => {\n      e.preventDefault();\n      this.app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", this.state.imgURL).then(response => {\n        const path = response.outputs[0].data.regions[0].region_info.bounding_box; // console.log(path);\n\n        this.setState({\n          box: path\n        });\n      }); //const entry = this.state.entries+1\n\n      fetch('http://localhost:3001/image', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.props)\n      }).then(res => res.json()).then(this.setState({\n        'entries': this.state.entries + 1\n      })).then(res => console.log(res)).catch(err => console.log(err));\n    };\n\n    this.state = {\n      imgURL: '',\n      box: '',\n      entries: props.entries\n    };\n    this.app = new Clarifai.App({\n      apiKey: '37ee56e7f2144e0d873763d314893fa5'\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"CoreApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(TiltBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Welcome \", this.props.name, \". You have entered \", this.props.entries, \" images.\"), React.createElement(\"div\", {\n      className: \"welcome2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Please submit an image url and let MagicReader find the face!\"), React.createElement(InputField, {\n      getIMG: this.getImg,\n      submitImage: this.submitImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(ImageBox, {\n      ImgUrl: this.state.imgURL,\n      box: this.state.box,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Logout, {\n      logout: this.props.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ImageReader;","map":{"version":3,"sources":["/Users/davidpreil/Desktop/React/smartbrain/src/imageReader.js"],"names":["React","Component","TiltBox","InputField","ImageBox","Logout","Clarifai","ImageReader","constructor","props","getImg","event","preventDefault","setState","imgURL","target","value","box","console","log","state","submitImage","e","app","models","predict","then","response","path","outputs","data","regions","region_info","bounding_box","fetch","method","headers","body","JSON","stringify","res","json","entries","catch","err","App","apiKey","render","name","logout"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n// import Particles from 'react-particles-js';\n// import particleOptions from './particles';\nimport TiltBox from './tiltbox';\n//import Tilt from 'react-vanilla-tilt';\nimport InputField from './inputField';\nimport ImageBox from './imagebox';\nimport Logout from './logout';\nimport Clarifai from 'clarifai';\n\n\n\nclass ImageReader extends Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      imgURL: '',\n      box:'',\n      entries:props.entries,\n    }\n    this.app = new Clarifai.App({apiKey:'37ee56e7f2144e0d873763d314893fa5'});\n  }\n\n  getImg = (event) => {\n    event.preventDefault();\n    this.setState({imgURL:event.target.value, box:''});\n    console.log(this.state.box);\n  }\n\n  submitImage = (e) => {\n    e.preventDefault();\n    this.app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\",this.state.imgURL)\n    .then((response) => {\n      const path = response.outputs[0].data.regions[0].region_info.bounding_box;\n     // console.log(path);\n      this.setState({box:path});})\n\n    //const entry = this.state.entries+1\n    fetch('http://localhost:3001/image', {\n          method: 'PUT',\n          headers: {'Content-Type':'application/json'},\n          body: JSON.stringify(this.props)\n        })\n        .then(res=>res.json())\n        .then(this.setState({'entries':this.state.entries+1}))\n        .then(res => console.log(res))\n        .catch(err => console.log(err))\n\n    }\n\n  render(){\n\n    return (\n      <div className=\"CoreApp\">\n        <TiltBox/>\n        <div className=\"welcome\">Welcome {this.props.name}. You have entered {this.props.entries} images.</div>\n        <div className='welcome2'>Please submit an image url and let MagicReader find the face!</div>\n        <InputField getIMG={this.getImg} submitImage={this.submitImage}/>\n        <ImageBox ImgUrl = {this.state.imgURL} box={this.state.box}/>\n        <Logout logout={this.props.logout}/>\n      </div>\n    );\n  }\n}\n\nexport default ImageReader;\n"]},"metadata":{},"sourceType":"module"}