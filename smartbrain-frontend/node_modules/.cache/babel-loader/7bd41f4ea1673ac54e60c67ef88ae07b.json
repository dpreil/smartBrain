{"ast":null,"code":"var _jsxFileName = \"/Users/davidpreil/Desktop/React/smartbrain/smartbrain-frontend/src/imageReader.js\";\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css'; // import Particles from 'react-particles-js';\n// import particleOptions from './particles';\n\nimport TiltBox from './tiltbox'; //import Tilt from 'react-vanilla-tilt';\n\nimport InputField from './inputField';\nimport ImageBox from './imagebox';\nimport Logout from './logout';\nimport Clarifai from 'clarifai';\n\nclass ImageReader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getImg = event => {\n      event.preventDefault();\n      this.setState({\n        imgURL: event.target.value,\n        box: ''\n      }); //console.log(this.state.box);\n    };\n\n    this.submitImage = e => {\n      e.preventDefault(); //need to send image URL\n      // console.log(path);\n\n      fetch('http://localhost:3001/imageProcessor', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'imgURL': this.state.imgURL\n        })\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n        this.setState({\n          'box': res.path\n        });\n      }) // .then(console.log(this.state.entries))\n      .then(res => console.log(res)).catch(err => console.log(err));\n      const entry = this.state.entries + 1;\n      fetch('http://localhost:3001/image', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'email': this.state.email\n        })\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n        this.setState({\n          'entries': entry,\n          'box': res.path\n        });\n      }) // .then(console.log(this.state.entries))\n      .then(res => console.log(res)).catch(err => console.log(err));\n    };\n\n    this.state = {\n      email: props.email,\n      imgURL: '',\n      box: '',\n      entries: props.entries\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"CoreApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TiltBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Welcome \", this.props.name, \". You have entered \", this.state.entries, \" images.\"), React.createElement(\"div\", {\n      className: \"welcome2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Please submit an image url and let MagicReader find the face!\"), React.createElement(InputField, {\n      getIMG: this.getImg,\n      submitImage: this.submitImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(ImageBox, {\n      ImgUrl: this.state.imgURL,\n      box: this.state.box,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Logout, {\n      logout: this.props.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ImageReader;","map":{"version":3,"sources":["/Users/davidpreil/Desktop/React/smartbrain/smartbrain-frontend/src/imageReader.js"],"names":["React","Component","TiltBox","InputField","ImageBox","Logout","Clarifai","ImageReader","constructor","props","getImg","event","preventDefault","setState","imgURL","target","value","box","submitImage","e","fetch","method","headers","body","JSON","stringify","state","then","res","json","console","log","path","catch","err","entry","entries","email","render","name","logout"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n// import Particles from 'react-particles-js';\n// import particleOptions from './particles';\nimport TiltBox from './tiltbox';\n//import Tilt from 'react-vanilla-tilt';\nimport InputField from './inputField';\nimport ImageBox from './imagebox';\nimport Logout from './logout';\nimport Clarifai from 'clarifai';\n\n\n\nclass ImageReader extends Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      email:props.email,\n      imgURL: '',\n      box:'',\n      entries:props.entries,\n    }\n  }\n\n  getImg = (event) => {\n    event.preventDefault();\n    this.setState({imgURL:event.target.value, box:''});\n    //console.log(this.state.box);\n  }\n\n  submitImage = (e) => {\n    e.preventDefault();\n    //need to send image URL\n     // console.log(path);\n     fetch('http://localhost:3001/imageProcessor', {\n          method: 'POST',\n          headers: {'Content-Type':'application/json'},\n          body: JSON.stringify({\n                                'imgURL':this.state.imgURL})\n        })\n        .then(res=>res.json())\n        .then(res =>{\n                    console.log(res);\n                     this.setState({'box':res.path})\n                              })\n       // .then(console.log(this.state.entries))\n        .then(res => console.log(res))\n        .catch(err => console.log(err))\n\n\n    const entry = this.state.entries+1;\n    fetch('http://localhost:3001/image', {\n          method: 'PUT',\n          headers: {'Content-Type':'application/json'},\n          body: JSON.stringify({\n                                'email':this.state.email,})\n        })\n        .then(res=>res.json())\n        .then(res =>{\n                    console.log(res);\n                     this.setState({\n                              'entries':entry,\n                              'box':res.path}\n                              )})\n       // .then(console.log(this.state.entries))\n        .then(res => console.log(res))\n        .catch(err => console.log(err))\n\n    }\n\n  render(){\n\n    return (\n      <div className=\"CoreApp\">\n        <TiltBox/>\n        <div className=\"welcome\">Welcome {this.props.name}. You have entered {this.state.entries} images.</div>\n        <div className='welcome2'>Please submit an image url and let MagicReader find the face!</div>\n        <InputField getIMG={this.getImg} submitImage={this.submitImage}/>\n        <ImageBox ImgUrl = {this.state.imgURL} box={this.state.box}/>\n        <Logout logout={this.props.logout}/>\n      </div>\n    );\n  }\n}\n\nexport default ImageReader;\n"]},"metadata":{},"sourceType":"module"}