{"ast":null,"code":"var _jsxFileName = \"/Users/davidpreil/Desktop/React/smartbrain/src/imageReader.js\";\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css'; // import Particles from 'react-particles-js';\n// import particleOptions from './particles';\n\nimport TiltBox from './tiltbox'; //import Tilt from 'react-vanilla-tilt';\n\nimport InputField from './inputField';\nimport ImageBox from './imagebox';\nimport Logout from './logout';\nimport Clarifai from 'clarifai';\n\nclass ImageReader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getImg = event => {\n      event.preventDefault();\n      this.setState({\n        imgURL: event.target.value\n      });\n      this.setState({\n        box: ''\n      });\n    };\n\n    this.submitImage = e => {\n      e.preventDefault();\n      this.app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", this.state.imgURL).then(response => {\n        const path = response.outputs[0].data.regions[0].region_info.bounding_box; // console.log(path);\n\n        this.setState({\n          box: path\n        });\n      }, err => {}); //submit image for rendering and processing\n      // I know enough to render in new div. need to fix use Input Field \n    };\n\n    this.state = {\n      imgURL: '',\n      box: ''\n    };\n    this.app = new Clarifai.App({\n      apiKey: '37ee56e7f2144e0d873763d314893fa5'\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"CoreApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(TiltBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(InputField, {\n      getIMG: this.getImg,\n      submitImage: this.submitImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(ImageBox, {\n      ImgUrl: this.state.imgURL,\n      box: this.state.box,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Logout, {\n      logout: this.props.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ImageReader;","map":{"version":3,"sources":["/Users/davidpreil/Desktop/React/smartbrain/src/imageReader.js"],"names":["React","Component","TiltBox","InputField","ImageBox","Logout","Clarifai","ImageReader","constructor","props","getImg","event","preventDefault","setState","imgURL","target","value","box","submitImage","e","app","models","predict","state","then","response","path","outputs","data","regions","region_info","bounding_box","err","App","apiKey","render","logout"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,WAAP,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAIA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAClCO,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,MAXmB,GAWTC,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAACH,KAAK,CAACI,MAAN,CAAaC;AAArB,OAAd;AACA,WAAKH,QAAL,CAAc;AAACI,QAAAA,GAAG,EAAC;AAAL,OAAd;AACD,KAfkB;;AAAA,SAiBnBC,WAjBmB,GAiBJC,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACP,cAAF;AACA,WAAKQ,GAAL,CAASC,MAAT,CAAgBC,OAAhB,CAAwB,kCAAxB,EAA2D,KAAKC,KAAL,CAAWT,MAAtE,EACCU,IADD,CACOC,QAAD,IAAc;AAClB,cAAMC,IAAI,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBC,IAApB,CAAyBC,OAAzB,CAAiC,CAAjC,EAAoCC,WAApC,CAAgDC,YAA7D,CADkB,CAEnB;;AACC,aAAKlB,QAAL,CAAc;AAACI,UAAAA,GAAG,EAACS;AAAL,SAAd;AAED,OAND,EAMIM,GAAD,IAAS,CAEX,CARD,EAFmB,CAYnB;AACA;AACD,KA/BkB;;AAEjB,SAAKT,KAAL,GAAa;AACXT,MAAAA,MAAM,EAAE,EADG;AAEXG,MAAAA,GAAG,EAAC;AAFO,KAAb;AAIA,SAAKG,GAAL,GAAW,IAAId,QAAQ,CAAC2B,GAAb,CAAiB;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAjB,CAAX;AACD;;AA0BDC,EAAAA,MAAM,GAAE;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAAKzB,MAAzB;AAAiC,MAAA,WAAW,EAAE,KAAKQ,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAI,KAAKK,KAAL,CAAWT,MAA/B;AAAuC,MAAA,GAAG,EAAE,KAAKS,KAAL,CAAWN,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAW2B,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA7CiC;;AAgDpC,eAAe7B,WAAf","sourcesContent":["import React, {Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n// import Particles from 'react-particles-js';\n// import particleOptions from './particles';\nimport TiltBox from './tiltbox';\n//import Tilt from 'react-vanilla-tilt';\nimport InputField from './inputField';\nimport ImageBox from './imagebox';\nimport Logout from './logout';\nimport Clarifai from 'clarifai';\n\n\n\nclass ImageReader extends Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      imgURL: '',\n      box:''\n    }\n    this.app = new Clarifai.App({apiKey:'37ee56e7f2144e0d873763d314893fa5'});\n  }\n  \n\n\n  getImg = (event) => {\n    event.preventDefault();\n    this.setState({imgURL:event.target.value});\n    this.setState({box:''})\n  }\n\n  submitImage = (e) => {\n    e.preventDefault();\n    this.app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\",this.state.imgURL)\n    .then((response) => {\n      const path = response.outputs[0].data.regions[0].region_info.bounding_box;\n     // console.log(path);\n      this.setState({box:path});\n\n    }, (err) => {\n\n    })\n\n    //submit image for rendering and processing\n    // I know enough to render in new div. need to fix use Input Field \n  }\n\n  render(){\n\n    return (\n      <div className=\"CoreApp\">\n        <TiltBox/>\n \n        <InputField getIMG={this.getImg} submitImage={this.submitImage}/>\n        <ImageBox ImgUrl = {this.state.imgURL} box={this.state.box}/>\n        <Logout logout={this.props.logout}/>\n      </div>\n    );\n  }\n}\n\nexport default ImageReader;\n"]},"metadata":{},"sourceType":"module"}