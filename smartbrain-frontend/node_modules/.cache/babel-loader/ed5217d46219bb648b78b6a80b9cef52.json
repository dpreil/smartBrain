{"ast":null,"code":"var _jsxFileName = \"/Users/davidpreil/Desktop/React/smartbrain/smartbrain-frontend/src/imagebox.js\";\nimport React from 'react';\n\nclass ImageBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    if (this.props.ImgUrl) {\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const width = canvas.width;\n      const height = canvas.height;\n      console.log(this.props.boxes);\n\n      if (!this.props.boxes) {\n        canvas.width = canvas.width;\n      } else {\n        for (let image of this.props.boxes) {\n          const corners = image.reqion_info.bounding_box;\n          console.log(corners);\n          const xStart = corners.left_col * canvas.width;\n          const yStart = corners.top_row * canvas.height;\n          const boxWidth = (corners.right_col - corners.left_col) * canvas.width;\n          const boxHeight = (corners.bottom_row - corners.top_row) * canvas.height;\n          ctx.rect(xStart, yStart, boxWidth, boxHeight);\n          ctx.strokeStyle = \"red\";\n          ctx.stroke();\n        }\n      }\n    } // const drawBox = () => {\n    // \tconst corners = this.props.box;\n    // \tconst xStart = corners.left_col*canvas.width;\n    // \tconst yStart = corners.top_row*canvas.height;\n    // \tconst boxWidth = (corners.right_col-corners.left_col)*canvas.width;\n    // \tconst boxHeight = (corners.bottom_row-corners.top_row)*canvas.height;\n    // \tctx.rect(xStart,yStart,boxWidth,boxHeight);\n    // \tctx.strokeStyle=\"red\";\n    // \tctx.stroke();\n\n  }\n\n  render() {\n    const img = this.props.ImgUrl;\n\n    if (img !== '') {\n      return React.createElement(\"div\", {\n        className: \"imageContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        className: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"imagebox pa1\",\n        src: img,\n        alt: \"Please enter a valid URL.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default ImageBox;","map":{"version":3,"sources":["/Users/davidpreil/Desktop/React/smartbrain/smartbrain-frontend/src/imagebox.js"],"names":["React","ImageBox","Component","constructor","props","canvasRef","createRef","componentDidUpdate","ImgUrl","canvas","current","ctx","getContext","width","height","console","log","boxes","image","corners","reqion_info","bounding_box","xStart","left_col","yStart","top_row","boxWidth","right_col","boxHeight","bottom_row","rect","strokeStyle","stroke","render","img"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiBL,KAAK,CAACM,SAAN,EAAjB;AACA;;AAEDC,EAAAA,kBAAkB,GAAG;AACpB,QAAG,KAAKH,KAAL,CAAWI,MAAd,EAAqB;AACpB,YAAMC,MAAM,GAAG,KAAKJ,SAAL,CAAeK,OAA9B;AACA,YAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,YAAMC,KAAK,GAAGJ,MAAM,CAACI,KAArB;AACA,YAAMC,MAAM,GAAGL,MAAM,CAACK,MAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWa,KAAvB;;AACA,UAAG,CAAC,KAAKb,KAAL,CAAWa,KAAf,EAAqB;AACpBR,QAAAA,MAAM,CAACI,KAAP,GAAeJ,MAAM,CAACI,KAAtB;AACA,OAFD,MAEO;AACN,aAAK,IAAIK,KAAT,IAAkB,KAAKd,KAAL,CAAWa,KAA7B,EAAmC;AAClC,gBAAME,OAAO,GAAGD,KAAK,CAACE,WAAN,CAAkBC,YAAlC;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACA,gBAAMG,MAAM,GAAGH,OAAO,CAACI,QAAR,GAAiBd,MAAM,CAACI,KAAvC;AACA,gBAAMW,MAAM,GAAGL,OAAO,CAACM,OAAR,GAAgBhB,MAAM,CAACK,MAAtC;AACA,gBAAMY,QAAQ,GAAG,CAACP,OAAO,CAACQ,SAAR,GAAkBR,OAAO,CAACI,QAA3B,IAAqCd,MAAM,CAACI,KAA7D;AACA,gBAAMe,SAAS,GAAG,CAACT,OAAO,CAACU,UAAR,GAAmBV,OAAO,CAACM,OAA5B,IAAqChB,MAAM,CAACK,MAA9D;AACAH,UAAAA,GAAG,CAACmB,IAAJ,CAASR,MAAT,EAAgBE,MAAhB,EAAuBE,QAAvB,EAAgCE,SAAhC;AACAjB,UAAAA,GAAG,CAACoB,WAAJ,GAAgB,KAAhB;AACApB,UAAAA,GAAG,CAACqB,MAAJ;AACE;AACH;AACD,KAtBmB,CAuBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC;;AAEFC,EAAAA,MAAM,GAAE;AACP,UAAMC,GAAG,GAAC,KAAK9B,KAAL,CAAWI,MAArB;;AACA,QAAG0B,GAAG,KAAG,EAAT,EAAY;AACV,aACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAQ,QAAA,GAAG,EAAI,KAAK7B,SAApB;AAA+B,QAAA,SAAS,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAE6B,GAAnC;AAAwC,QAAA,GAAG,EAAC,2BAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADD;AAMA,KAPF,MAOQ;AACN,aAAQ;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACA;AACF;;AApDqC;;AAuDvC,eAAejC,QAAf","sourcesContent":["import React from 'react';\n\nclass ImageBox extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.canvasRef = React.createRef();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif(this.props.ImgUrl){\n\t\t\tconst canvas = this.canvasRef.current;\n\t\t\tconst ctx = canvas.getContext('2d');\n\t\t\tconst width = canvas.width;\n\t\t\tconst height = canvas.height;\n\t\t\tconsole.log(this.props.boxes);\n\t\t\tif(!this.props.boxes){\n\t\t\t\tcanvas.width = canvas.width;\n\t\t\t} else {\n\t\t\t\tfor (let image of this.props.boxes){\n\t\t\t\t\tconst corners = image.reqion_info.bounding_box;\n\t\t\t\t\tconsole.log(corners);\n\t\t\t\t\tconst xStart = corners.left_col*canvas.width;\n\t\t\t\t\tconst yStart = corners.top_row*canvas.height;\n\t\t\t\t\tconst boxWidth = (corners.right_col-corners.left_col)*canvas.width;\n\t\t\t\t\tconst boxHeight = (corners.bottom_row-corners.top_row)*canvas.height;\n\t\t\t\t\tctx.rect(xStart,yStart,boxWidth,boxHeight);\n\t\t\t\t\tctx.strokeStyle=\"red\";\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// const drawBox = () => {\n\t\t// \tconst corners = this.props.box;\n\t\t// \tconst xStart = corners.left_col*canvas.width;\n\t\t// \tconst yStart = corners.top_row*canvas.height;\n\t\t// \tconst boxWidth = (corners.right_col-corners.left_col)*canvas.width;\n\t\t// \tconst boxHeight = (corners.bottom_row-corners.top_row)*canvas.height;\n\t\t// \tctx.rect(xStart,yStart,boxWidth,boxHeight);\n\t\t// \tctx.strokeStyle=\"red\";\n\t\t// \tctx.stroke();\n\t\t}\t\n\n\trender(){\n\t\tconst img=this.props.ImgUrl;\n\t\tif(img!==''){\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"imageContainer\">\n\t\t\t\t\t\t<canvas ref = {this.canvasRef} className=\"canvas\"/ >\n\t\t\t\t\t\t<img className='imagebox pa1' src={img} alt='Please enter a valid URL.'/>\n\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn (<div className=\"empty\"/>)\n\t\t\t}\n\t}\n}\n\nexport default ImageBox;"]},"metadata":{},"sourceType":"module"}